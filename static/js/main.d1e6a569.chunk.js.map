{"version":3,"sources":["reportWebVitals.js","likebtn/LikeButton.js","recipecards/RecipeCard.js","common/recipe.jpg","addrecipe/AddRecipe.js","home/Home.js","App/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LikeButton","likeClickHandler","state","color","setState","className","id","this","props","num","onClick","Component","RecipeCard","deleteHandler","delete","array","filter","n","recipe","style","fontWeight","href","strSource","rel","target","strMeal","i","src","strMealThumb","alt","Typography","fontStyle","strCategory","strArea","map","paddingLeft","marginBottom","idMeal","textAlign","strInstructions","AddRecipe","headingChange","e","heading","value","categoryHandler","category","areaHandler","area","ingredientsHandler","ingredients","recipeHandler","html","disabled","onChange","customStyles","content","top","left","right","bottom","marginRight","transform","TabContainer","component","padding","children","Home","openModalHandler","modalIsOpen","usernameRequired","username","loginPasswordRequired","loginPassword","firstnameRequired","firstname","lastnameRequired","lastname","emailRequired","email","registerPasswordRequired","registerPassword","contactRequired","contact","errorDisplay","recipes","closeModalHandler","tabChangeHandler","event","loginHandler","a","arr","rand","Math","floor","random","url","fetch","response","json","data","meals","greetingDisplay","searchInput","loginClickHandler","password","loggedIn","inputUsernameChangeHandler","inputLoginPasswordChangeHandler","registerClickHandler","includes","registrationSuccess","inputFirstNameChangeHandler","inputLastNameChangeHandler","inputEmailChangeHandler","inputRegisterPasswordChangeHandler","inputContactChangeHandler","logoutHandler","window","location","reload","addHandler","clickValue","variant","marginTop","ariaHideApp","isOpen","contentLabel","onRequestClose","Tabs","Tab","label","FormControl","required","InputLabel","htmlFor","Input","type","FormHelperText","loginpassword","Button","registerpassword","Array","fill","item","index","likeId","App","loginDisplay","modalDisplay","userName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1e6a569.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, {Component} from 'react';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport \"./LikeButton.css\"\r\n\r\n\r\nclass LikeButton extends Component{         //Created a like button component to add functionality to like buttons and \r\n                                            //to make sure like buttons of different cards don't conflict and \r\n                                            //to make code organised\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            color: \"black\"\r\n        }\r\n    }\r\n\r\n    likeClickHandler = () =>{\r\n        if(this.state.color === \"black\"){\r\n            this.setState({color: \"red\"})\r\n        } else if (this.state.color === \"red\"){\r\n            this.setState({color: \"black\"})\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"like-icon\">       {/* Made sure i gave a unique id to each like button so they dont collide*/}\r\n                <FavoriteBorderOutlinedIcon id = {this.props.num}  className = {this.state.color} onClick = {this.likeClickHandler} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LikeButton;\r\n","import { Typography } from '@material-ui/core';\r\nimport React, {Component} from 'react';\r\nimport \"./RecipeCard.css\";\r\nimport LikeButton from \"../likebtn/LikeButton\"  ;       //Like button will be imported from another file to make code clean and to make sure the file is not overcrowded with setState methods\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nclass RecipeCard extends Component{\r\n\r\n    constructor()\r\n    {\r\n        \r\n        super();\r\n        this.state = {     \r\n            delete: false                          //Added for the sake of future use\r\n        }\r\n    }\r\n\r\n    deleteHandler = () => {\r\n        this.setState({delete: true})}\r\n\r\n\r\n\r\n\r\n    array = () =>{                                      //Created 20 numbers and used them to map ingredients array\r\n        let array = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];\r\n        let filtered = array.filter(n=> (this.props.recipe[\"strIngredient\"+n] !==\"\" && this.props.recipe[\"strIngredient\"+n] !== null ))\r\n        return filtered;                                //returned only those ingredient numbers which had ingredients listed\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {!this.state.delete?\r\n                <div className = \"cardContainer\">\r\n                                <div className = \"card-header-container\">  {/*Added heading with an achor tag which directs to the source url of the recipe provided by the api*/}\r\n                                    <div className = \"recipe-heading\"  style = {{fontWeight: 'bold'}}><a href = {this.props.recipe.strSource} rel=\"noopener noreferrer\" target = \"_blank\">{this.props.recipe.strMeal}</a></div>\r\n                                    <div className = \"like-icon\">    \r\n                                        <LikeButton  id = {\"like\"+this.props.i} num = {this.props.i}/>    {/*Like button comonent is called here for a card */}\r\n                                        <DeleteIcon id = {\"delete\"+this.props.i} onClick = {this.deleteHandler}/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className = \"cardContent\">\r\n                                    <div className = \"left\">    {/*Created left right classes to divide the picture and content in a way that was required */}\r\n                                        <img className = \"pic\"src = {this.props.recipe.strMealThumb} alt = {this.props.recipe.strMeal} />  {/*Used image from api data */}\r\n                                    </div>\r\n                                \r\n                                    <div className = \"right\">   {/*Created left right classes to divide the picture and content in a way that was required */}\r\n                                        <div className = \"description\">\r\n                                            <Typography><span style = {{fontStyle: \"italic\"}}>Category of Meal - {this.props.recipe.strCategory}</span></Typography>\r\n                                            <Typography><span style = {{fontStyle: \"italic\"}}>Area of the Meal - {this.props.recipe.strArea}</span></Typography>\r\n                                        </div>\r\n                                        <div>\r\n                                            <Typography><span style = {{fontStyle: \"italic\"}}>Ingredients</span></Typography>\r\n                                            <div className = \"ingredients-container\">       {/*We map through the array of numbers where strIngredients key has values and we used the same numbers to get the strMeasure values and showed them in a typography element */}\r\n                                                {this.array().map(n => {\r\n                                                    return (<Typography style = {{paddingLeft:10, marginBottom:20}}key ={this.props.recipe.idMeal+n}><span>{this.props.recipe[\"strIngredient\"+n]} --- {this.props.recipe[\"strMeasure\"+n]}</span></Typography>)\r\n                                                    }\r\n                                                )}\r\n                                            </div>\r\n                                            <div className = \"recipe\">          {/*We get recipe data from the api */}\r\n                                                <Typography style = {{textAlign: 'center'}}><span style = {{fontStyle:\"italic\"}}>Recipe</span></Typography>\r\n                                                <div className = \"recipe-container\">\r\n                                                    <Typography>{this.props.recipe.strInstructions}</Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                </div>: null}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RecipeCard;","export default __webpack_public_path__ + \"static/media/recipe.dd3d0f50.jpg\";","import { Typography }   from '@material-ui/core';\r\nimport React, {Component} from 'react';\r\nimport \"./AddRecipe.css\";\r\nimport recipe from \"../common/recipe.jpg\"\r\nimport LikeButton from \"../likebtn/LikeButton\"         //Like button will be imported from another file to make code clean and to make sure the file is not overcrowded with setState methods\r\nimport ContentEditable from 'react-contenteditable';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nclass AddRecipe extends Component{\r\n\r\n    constructor(props)\r\n    {\r\n        \r\n        super(props);\r\n        this.state = {   \r\n            heading: `Dish ${this.props.num +1} (Click to edit)`,\r\n            category: \"click to edit\",\r\n            area: \"click to edit\",\r\n            ingredients: \"click to edit\",\r\n            recipe: \"click to edit\",\r\n            delete: false\r\n                                       \r\n        }\r\n    }\r\n\r\n\r\n    headingChange = (e) => {\r\n        this.setState({heading: e.target.value})}\r\n\r\n    categoryHandler = (e) => {\r\n        this.setState({category: e.target.value})}\r\n\r\n    areaHandler = (e) => {\r\n        this.setState({area: e.target.value})}\r\n\r\n    ingredientsHandler = (e) => {\r\n        this.setState({ingredients: e.target.value})}\r\n\r\n    recipeHandler = (e) => {\r\n        this.setState({recipe: e.target.value})}\r\n\r\n    deleteHandler = () => {\r\n        this.setState({delete: true})}\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {!this.state.delete ? \r\n                <div className = \"cardContainer\" >\r\n                                <div className = \"card-header-container\">  {/*Added heading with an achor tag which directs to the source url of the recipe provided by the api*/}\r\n                                    <div className = \"recipe-heading\"  style = {{fontWeight: 'bold'}}><ContentEditable html={this.state.heading} disabled = {false} onChange={this.headingChange}/></div>\r\n                                    <div className = \"like-icon\">    \r\n                                        <LikeButton  id = {\"like\"+this.props.id} num = {this.props.id}/>    {/*Like button comonent is called here for a card */}\r\n                                        <DeleteIcon id = {\"delete\"+this.props.id} onClick = {this.deleteHandler}/>\r\n                                    </div>                               \r\n                                </div>\r\n\r\n                                <div className = \"cardContent\">\r\n                                    <div className = \"left\">    {/*Created left right classes to divide the picture and content in a way that was required */}\r\n                                        <img className = \"pic\"src = {recipe} alt = \"\"/>  {/*Used image from api data */}\r\n                                    </div>\r\n                                \r\n                                    <div className = \"right\">   {/*Created left right classes to divide the picture and content in a way that was required */}\r\n                                        <div className = \"description\">\r\n                                            <div><span style = {{fontStyle: \"italic\"}}>Category of Meal - <ContentEditable html={this.state.category} disabled = {false} onChange = {this.categoryHandler}/></span></div>\r\n                                            <div><span style = {{fontStyle: \"italic\"}}>Area of the Meal - <ContentEditable html={this.state.area} disabled = {false} onChange = {this.areaHandler}/></span></div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <Typography><span style = {{fontStyle: \"italic\"}}>Ingredients</span></Typography>\r\n                                            <div className = \"ingredients-container\">\r\n                                                <ContentEditable html={this.state.ingredients} disabled = {false} onChange = {this.ingredientsHandler}/>\r\n                            \r\n                                            </div>\r\n                                            <div className = \"recipe\">          {/*We get recipe data from the api */}\r\n                                                <Typography style = {{textAlign: 'center'}}><span style = {{fontStyle:\"italic\"}}>Recipe</span></Typography>\r\n                                                <div className = \"recipe-container\">\r\n                                                    <ContentEditable html = {this.state.recipe} disabled = {false} onChange = {this.recipeHandler}/>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                </div>: null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddRecipe;","import React, {Component} from 'react';\r\nimport './Home.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from 'react-modal';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport PropTypes from 'prop-types';\r\nimport RecipeCard from '../recipecards/RecipeCard';    //created a seperate component for recipe cards which take the data from the api and on import send the recipe cards for display on home.js\r\nimport AddRecipe from '../addrecipe/AddRecipe';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nconst TabContainer = function (props) {\r\n    return (\r\n        <Typography component=\"div\" style={{ padding: 0, textAlign: 'center' }}>\r\n            {props.children}\r\n        </Typography>\r\n    )\r\n}\r\n\r\nTabContainer.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\n\r\nclass Home extends Component{         /*Created for the purpose of reusability in case we decide to make more pages */\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            modalIsOpen: false,\r\n            value: 0,\r\n            usernameRequired: \"dispNone\",\r\n            username: \"\",\r\n            loginPasswordRequired: \"dispNone\",\r\n            loginPassword: \"\",\r\n            firstnameRequired: \"dispNone\",\r\n            firstname: \"\",\r\n            lastnameRequired: \"dispNone\",\r\n            lastname: \"\",\r\n            emailRequired: \"dispNone\",\r\n            email: \"\",\r\n            registerPasswordRequired: \"dispNone\",\r\n            registerPassword: \"\",\r\n            contactRequired: \"dispNone\",\r\n            contact: \"\",\r\n            registrationSuccess: false,\r\n            clickValue : 0\r\n        }\r\n    }\r\n\r\n    openModalHandler = () => {\r\n        this.setState({\r\n            modalIsOpen: true,\r\n            value: 0,\r\n            usernameRequired: \"dispNone\",\r\n            username: \"\",\r\n            loginPasswordRequired: \"dispNone\",\r\n            loginPassword: \"\",\r\n            firstnameRequired: \"dispNone\",\r\n            firstname: \"\",\r\n            lastnameRequired: \"dispNone\",\r\n            lastname: \"\",\r\n            emailRequired: \"dispNone\",\r\n            email: \"\",\r\n            registerPasswordRequired: \"dispNone\",\r\n            registerPassword: \"\",\r\n            contactRequired: \"dispNone\",\r\n            contact: \"\",\r\n            errorDisplay: \"dispNone\",\r\n            recipes : null\r\n        });\r\n    }\r\n\r\n    closeModalHandler = () => {\r\n        this.setState({ modalIsOpen: false });\r\n    }\r\n\r\n    tabChangeHandler = (event, value) => {\r\n        this.setState({ value });\r\n    }\r\n\r\n    loginHandler = async () =>{              \r\n        let arr = ['a', 'b', 'c', 'd', 'e', 'f'] \r\n        let rand = Math.floor(Math.random()*6)                   //onCLicking the get recipes button,  we fetch the data using the input entered by user which we tracked continously using state.\r\n        this.setState({...this.state, recipes:null, errorDisplay: \"dispNone\"})\r\n        let url = \"https://www.themealdb.com/api/json/v1/1/search.php?s=\"+ arr[rand];  \r\n        let response = await fetch(url);                                                   //Used Fetch API to get data from mealdb api\r\n        let data = await response.json();\r\n        this.setState({...this.state, recipes: data.meals, greetingDisplay: \"dispNone\"})                  //Soon as we hit search, the greeting message disappears\r\n\r\n        if (data.meals=== null || this.state.searchInput === \"\"){                          // if api call doesnt get the data or if the user didnt input anything, error message is displayed\r\n            this.setState({...this.state, errorDisplay: \"DispBlock\", recipes: null});\r\n        }\r\n\r\n    }\r\n\r\n    loginClickHandler = () => {\r\n        this.state.username === \"\" ? this.setState({ usernameRequired: \"dispBlock\" }) : this.setState({ usernameRequired: \"dispNone\" });\r\n        this.state.loginPassword === \"\" ? this.setState({ loginPasswordRequired: \"dispBlock\" }) : this.setState({ loginPasswordRequired: \"dispNone\" });\r\n\r\n        if (this.state.username!==\"\" && this.state.password!==\"\"){\r\n            this.setState({\r\n                ...this.state,\r\n                loggedIn: true\r\n            });\r\n            this.loginHandler();\r\n            this.closeModalHandler();\r\n        }\r\n\r\n        \r\n\r\n\r\n        \r\n    };\r\n\r\n\r\n    \r\n\r\n    inputUsernameChangeHandler = (e) => {\r\n        this.setState({ username: e.target.value });\r\n    }\r\n\r\n    inputLoginPasswordChangeHandler = (e) => {\r\n        this.setState({ loginPassword: e.target.value });\r\n    }\r\n\r\n    registerClickHandler = () => {\r\n\r\n        this.state.firstname === \"\" ? this.setState({ firstnameRequired: \"dispBlock\" }) : this.setState({ firstnameRequired: \"dispNone\" });\r\n        this.state.lastname === \"\" ? this.setState({ lastnameRequired: \"dispBlock\" }) : this.setState({ lastnameRequired: \"dispNone\" });\r\n        (this.state.email === \"\" || !this.state.email.includes(\"@\")) ? this.setState({ emailRequired: \"dispBlock\" }) : this.setState({ emailRequired: \"dispNone\" });\r\n        this.state.registerPassword === \"\" ? this.setState({ registerPasswordRequired: \"dispBlock\" }) : this.setState({ registerPasswordRequired: \"dispNone\" });\r\n        this.state.contact === \"\" ? this.setState({ contactRequired: \"dispBlock\" }) : this.setState({ contactRequired: \"dispNone\" });\r\n        this.setState({\r\n                    registrationSuccess: true\r\n                })\r\n            \r\n    }\r\n        \r\n    \r\n    inputFirstNameChangeHandler = (e) => {\r\n        this.setState({ firstname: e.target.value });\r\n    }\r\n\r\n    inputLastNameChangeHandler = (e) => {\r\n        this.setState({ lastname: e.target.value });\r\n    }\r\n\r\n    inputEmailChangeHandler = (e) => {\r\n        this.setState({ email: e.target.value });\r\n    }\r\n\r\n    inputRegisterPasswordChangeHandler = (e) => {\r\n        this.setState({ registerPassword: e.target.value });\r\n    }\r\n\r\n    inputContactChangeHandler = (e) => {\r\n        this.setState({ contact: e.target.value });\r\n    }\r\n\r\n    logoutHandler = (e) => {\r\n\r\n\r\n\r\n        this.setState({\r\n            loggedIn: false\r\n        });\r\n        window.location.reload(false);\r\n    } \r\n\r\n    addHandler = () =>{\r\n        this.setState({...this.state, clickValue: this.state.clickValue+1})\r\n    }\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className = \"heading\">\r\n                    <Typography variant = \"h2\" style = {{fontWeight: 'bold'}}>The Recipe App</Typography>       {/*Added a Bold title at the top of the web page as asked */}\r\n                </div>\r\n                <div className = \"flex-container\">\r\n                    {!this.state.loggedIn ?\r\n                            <div className=\"login-button\">\r\n                                <Typography variant =\"h4\"  style ={{textAlign:'center', marginTop: 16, fontWeight: 'bold'}}component = \"div\"><span>Login or Sign Up to see your recipes</span></Typography>\r\n                                <button className = \"btn\" style ={{textAlign:'center', marginTop: 16}} onClick = {this.openModalHandler} >Login / SignUp</button>\r\n\r\n                            </div>\r\n                            :\r\n                            <div className=\"login-button\">\r\n                                <Typography variant =\"h4\"  style ={{textAlign:'center', marginTop: 16, fontWeight: 'bold'}}component = \"div\"><span>{`Welcome! ${this.state.username}. You can Browse your Recipes below.`}</span></Typography>\r\n                                <div>\r\n                                    <button className = \"btn\" style ={{textAlign:'center', marginTop: 16}} onClick = {this.logoutHandler} >Logout</button>\r\n                                </div>\r\n                                <button className = \"btn\" style ={{textAlign:'center', marginTop: 16}} onClick = {this.addHandler} >Add Recipe</button>\r\n\r\n                            </div>\r\n                        }\r\n                </div>\r\n\r\n\r\n                <Modal\r\n                    ariaHideApp={false}\r\n                    isOpen={this.state.modalIsOpen}\r\n                    contentLabel=\"Login\"\r\n                    onRequestClose={this.closeModalHandler}\r\n                    style={customStyles}\r\n                >\r\n                    <Tabs className=\"tabs\" value={this.state.value} onChange={this.tabChangeHandler}>\r\n                        <Tab label=\"Login\" />\r\n                        <Tab label=\"Register\" />\r\n                    </Tabs>\r\n\r\n                    {this.state.value === 0 &&\r\n                        <TabContainer>\r\n                            <FormControl required>\r\n                                <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n                                <Input required = {true} id=\"username\" type=\"text\" username={this.state.username} onChange={this.inputUsernameChangeHandler} />\r\n                                <FormHelperText className={this.state.usernameRequired}>\r\n                                    <span className=\"red\">required</span>\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                            <br /><br />\r\n                            <FormControl required>\r\n                                <InputLabel htmlFor=\"loginPassword\">Password</InputLabel>\r\n                                <Input required = {true} id=\"loginPassword\" type=\"password\" loginpassword={this.state.loginPassword} onChange={this.inputLoginPasswordChangeHandler} />\r\n                                <FormHelperText className={this.state.loginPasswordRequired}>\r\n                                    <span className=\"red\">required</span>\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                            <br /><br />\r\n                            {this.state.loggedIn === true &&\r\n                                <FormControl>\r\n                                    <span className=\"successText\">\r\n                                        Login Successful!\r\n                                    </span>\r\n                                </FormControl>\r\n                            }\r\n                            <br /><br />\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.loginClickHandler}>LOGIN</Button>\r\n                        </TabContainer>\r\n                    }\r\n\r\n                    {this.state.value === 1 &&\r\n                        <TabContainer>\r\n                            <FormControl required>\r\n                                <InputLabel htmlFor=\"firstname\">First Name</InputLabel>\r\n                                <Input id=\"firstname\" type=\"text\" firstname={this.state.firstname} onChange={this.inputFirstNameChangeHandler} />\r\n                                <FormHelperText className={this.state.firstnameRequired}>\r\n                                    <span className=\"red\">required</span>\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                            <br /><br />\r\n                            <FormControl required>\r\n                                <InputLabel htmlFor=\"lastname\">Last Name</InputLabel>\r\n                                <Input id=\"lastname\" type=\"text\" lastname={this.state.lastname} onChange={this.inputLastNameChangeHandler} />\r\n                                <FormHelperText className={this.state.lastnameRequired}>\r\n                                    <span className=\"red\">required</span>\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                            <br /><br />\r\n                            <FormControl required>\r\n                                <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n                                <Input  id=\"email\" type=\"text\" email={this.state.email} onChange={this.inputEmailChangeHandler} />\r\n                                <FormHelperText className={this.state.emailRequired}>\r\n                                    <span className=\"red\">Not a Valid email</span>\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                            <br /><br />\r\n                            <FormControl required>\r\n                                <InputLabel htmlFor=\"registerPassword\">Password</InputLabel>\r\n                                <Input id=\"registerPassword\" type=\"password\" registerpassword={this.state.registerPassword} onChange={this.inputRegisterPasswordChangeHandler} />\r\n                                <FormHelperText className={this.state.registerPasswordRequired}>\r\n                                    <span className=\"red\">required</span>\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                            <br /><br />\r\n                            <FormControl required>\r\n                                <InputLabel htmlFor=\"contact\">Contact No.</InputLabel>\r\n                                <Input id=\"contact\" type=\"number\" contact={this.state.contact} onChange={this.inputContactChangeHandler} />\r\n                                <FormHelperText className={this.state.contactRequired}>\r\n                                    <span className=\"red\">required</span>\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                            <br /><br />\r\n                            {this.state.registrationSuccess === true &&\r\n                                <FormControl>\r\n                                    <span className=\"successText\">\r\n                                        Registration Successful. Please Login!\r\n                                      </span>\r\n                                </FormControl>\r\n                            }\r\n                            <br /><br />\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.registerClickHandler}>REGISTER</Button>\r\n                        </TabContainer>\r\n                    }\r\n                </Modal>\r\n\r\n\r\n                <div>\r\n\r\n                    {(this.state.clickValue >0)?\r\n                        Array(this.state.clickValue).fill(0).map((item, index) => {\r\n                            return (\r\n                                <AddRecipe key = {`addedRecipeindex${index}`} num = {index} id = {`add${index}`} />\r\n                            )}):\r\n                        null\r\n                    \r\n                    }\r\n\r\n\r\n                    {(this.state.recipes != null) &&            /*We check if the data returned by api is not null, then we send that data in the form of props to the recipeCard.js file*/\r\n                    \r\n                    this.state.recipes.map(recipe =>{           /* The dta recieved is an array. So we map that array and return a recipecard component for each index of the recipes array*/\r\n                        let i =0;                               /*Defined this i to assign a different key and different attributes to each recipeCard */\r\n                        i++\r\n                        return (\r\n                        <RecipeCard key = {recipe.idMeal + i} id = {recipe.idMeal +i} likeId = {i} recipe = {recipe}/>)\r\n\r\n                    })\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport Home from '../home/Home';\r\nimport \"./App.css\";\r\n\r\n\r\n\r\n\r\n\r\nclass App extends Component{\r\n    \r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            greetingDisplay : \"dispBlock\",   // states of the greeting message which displays when the page loads\r\n            errorDisplay: \"dispNone\",   \r\n            loginDisplay: \"dispNone\",     // states for the error message which displays when error occurs in api results\r\n            modalDisplay: \"dispNone\",\r\n            userName: \"\",    \r\n            recipes: null\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Home />                                          {/*imported the header file which contains the heading of the page. Purpose is to reuse it if we decide to create more pages*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';                             //imported index.css\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '@fontsource/roboto';                      //installed font roboto and imported it\r\nimport Home from \"./App/App\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Home/>,                                       //rendered the home component\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}